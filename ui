-- KyanosUI - A comprehensive UI library for Luau/Roblox
-- Inspired by modern UI frameworks with clean, dark theming

local KyanosUI = {}
KyanosUI.__index = KyanosUI

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Constants
local THEME = {
    Background = Color3.fromRGB(25, 30, 35),
    Secondary = Color3.fromRGB(35, 40, 45),
    Accent = Color3.fromRGB(0, 162, 255),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(180, 180, 180),
    Border = Color3.fromRGB(60, 65, 70),
    Success = Color3.fromRGB(46, 204, 113),
    Warning = Color3.fromRGB(241, 196, 15),
    Error = Color3.fromRGB(231, 76, 60)
}

-- Utility Functions
local function createTween(object, properties, duration, easingStyle)
    duration = duration or 0.3
    easingStyle = easingStyle or Enum.EasingStyle.Quad
    
    local tweenInfo = TweenInfo.new(duration, easingStyle, Enum.EasingDirection.Out)
    local tween = TweenService:Create(object, tweenInfo, properties)
    return tween
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function createStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or THEME.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

-- Main Library
function KyanosUI:CreateWindow(config)
    local Window = {}
    Window.Tabs = {}
    Window.Config = config or {}
    
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "KyanosUI"
    screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 800, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -400, 0.5, -250)
    mainFrame.BackgroundColor3 = THEME.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    createCorner(mainFrame, 12)
    createStroke(mainFrame, THEME.Border, 2)
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = THEME.Secondary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    createCorner(titleBar, 12)
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -100, 1, 0)
    titleLabel.Position = UDim2.new(0, 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = config.Name or "KyanosUI"
    titleLabel.TextColor3 = THEME.Text
    titleLabel.TextSize = 18
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar
    
    -- Close Button
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = THEME.Error
    closeButton.Text = "Ã—"
    closeButton.TextColor3 = THEME.Text
    closeButton.TextSize = 20
    closeButton.Font = Enum.Font.GothamBold
    closeButton.BorderSizePixel = 0
    closeButton.Parent = titleBar
    createCorner(closeButton, 6)
    
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
    
    -- Sidebar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Size = UDim2.new(0, 200, 1, -40)
    sidebar.Position = UDim2.new(0, 0, 0, 40)
    sidebar.BackgroundColor3 = THEME.Secondary
    sidebar.BorderSizePixel = 0
    sidebar.Parent = mainFrame
    
    local sidebarList = Instance.new("UIListLayout")
    sidebarList.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarList.Padding = UDim.new(0, 2)
    sidebarList.Parent = sidebar
    
    -- Content Area
    local contentArea = Instance.new("Frame")
    contentArea.Name = "ContentArea"
    contentArea.Size = UDim2.new(1, -200, 1, -40)
    contentArea.Position = UDim2.new(0, 200, 0, 40)
    contentArea.BackgroundColor3 = THEME.Background
    contentArea.BorderSizePixel = 0
    contentArea.Parent = mainFrame
    
    -- Make window draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Tab Creation Function
    function Window:CreateTab(name, icon)
        local Tab = {}
        Tab.Elements = {}
        Tab.Sections = {}
        
        -- Tab Button
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1, 0, 0, 40)
        tabButton.BackgroundColor3 = THEME.Secondary
        tabButton.Text = name
        tabButton.TextColor3 = THEME.TextSecondary
        tabButton.TextSize = 14
        tabButton.Font = Enum.Font.Gotham
        tabButton.BorderSizePixel = 0
        tabButton.Parent = sidebar
        
        -- Tab Content
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = name .. "Content"
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 6
        tabContent.ScrollBarImageColor3 = THEME.Accent
        tabContent.Visible = false
        tabContent.Parent = contentArea
        
        local contentList = Instance.new("UIListLayout")
        contentList.SortOrder = Enum.SortOrder.LayoutOrder
        contentList.Padding = UDim.new(0, 10)
        contentList.Parent = tabContent
        
        local contentPadding = Instance.new("UIPadding")
        contentPadding.PaddingAll = UDim.new(0, 15)
        contentPadding.Parent = tabContent
        
        -- Tab switching logic
        tabButton.MouseButton1Click:Connect(function()
            -- Hide all tabs
            for _, tab in pairs(Window.Tabs) do
                tab.Content.Visible = false
                tab.Button.BackgroundColor3 = THEME.Secondary
                tab.Button.TextColor3 = THEME.TextSecondary
            end
            
            -- Show current tab
            tabContent.Visible = true
            tabButton.BackgroundColor3 = THEME.Accent
            tabButton.TextColor3 = THEME.Text
        end)
        
        Tab.Button = tabButton
        Tab.Content = tabContent
        
        -- Show first tab by default
        if #Window.Tabs == 0 then
            tabContent.Visible = true
            tabButton.BackgroundColor3 = THEME.Accent
            tabButton.TextColor3 = THEME.Text
        end
        
        -- Section Creation
        function Tab:CreateSection(name, titleOnly)
            local Section = {}
            
            local sectionFrame = Instance.new("Frame")
            sectionFrame.Name = name
            sectionFrame.Size = UDim2.new(1, 0, 0, titleOnly and 30 or 50)
            sectionFrame.BackgroundTransparency = 1
            sectionFrame.Parent = tabContent
            
            local sectionTitle = Instance.new("TextLabel")
            sectionTitle.Name = "Title"
            sectionTitle.Size = UDim2.new(1, 0, 0, 25)
            sectionTitle.BackgroundTransparency = 1
            sectionTitle.Text = name
            sectionTitle.TextColor3 = THEME.Text
            sectionTitle.TextSize = 16
            sectionTitle.Font = Enum.Font.GothamBold
            sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            sectionTitle.Parent = sectionFrame
            
            if not titleOnly then
                local separator = Instance.new("Frame")
                separator.Name = "Separator"
                separator.Size = UDim2.new(1, 0, 0, 1)
                separator.Position = UDim2.new(0, 0, 0, 30)
                separator.BackgroundColor3 = THEME.Border
                separator.BorderSizePixel = 0
                separator.Parent = sectionFrame
            end
            
            Section.Frame = sectionFrame
            table.insert(Tab.Sections, Section)
            
            return Section
        end
        
        -- Button Creation
        function Tab:CreateButton(config)
            local buttonFrame = Instance.new("Frame")
            buttonFrame.Name = config.Name
            buttonFrame.Size = UDim2.new(1, 0, 0, 40)
            buttonFrame.BackgroundColor3 = THEME.Secondary
            buttonFrame.BorderSizePixel = 0
            buttonFrame.Parent = config.SectionParent and config.SectionParent.Frame or tabContent
            createCorner(buttonFrame, 6)
            
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 1, 0)
            button.BackgroundTransparency = 1
            button.Text = config.Name
            button.TextColor3 = THEME.Text
            button.TextSize = 14
            button.Font = Enum.Font.Gotham
            button.Parent = buttonFrame
            
            -- Hover effects
            button.MouseEnter:Connect(function()
                createTween(buttonFrame, {BackgroundColor3 = THEME.Accent}):Play()
            end)
            
            button.MouseLeave:Connect(function()
                createTween(buttonFrame, {BackgroundColor3 = THEME.Secondary}):Play()
            end)
            
            button.MouseButton1Click:Connect(function()
                if config.Callback then
                    config.Callback()
                end
            end)
            
            return {
                Set = function(self, newName, newInteract)
                    if newName then button.Text = newName end
                end,
                Lock = function(self, reason)
                    button.Text = reason or "Locked"
                    buttonFrame.BackgroundColor3 = THEME.Border
                    button.TextColor3 = THEME.TextSecondary
                end,
                Unlock = function(self, reason)
                    button.Text = config.Name
                    buttonFrame.BackgroundColor3 = THEME.Secondary
                    button.TextColor3 = THEME.Text
                end
            }
        end
        
        -- Toggle Creation
        function Tab:CreateToggle(config)
            local toggleFrame = Instance.new("Frame")
            toggleFrame.Name = config.Name
            toggleFrame.Size = UDim2.new(1, 0, 0, 40)
            toggleFrame.BackgroundColor3 = THEME.Secondary
            toggleFrame.BorderSizePixel = 0
            toggleFrame.Parent = config.SectionParent and config.SectionParent.Frame or tabContent
            createCorner(toggleFrame, 6)
            
            local toggleLabel = Instance.new("TextLabel")
            toggleLabel.Size = UDim2.new(1, -60, 1, 0)
            toggleLabel.Position = UDim2.new(0, 15, 0, 0)
            toggleLabel.BackgroundTransparency = 1
            toggleLabel.Text = config.Name
            toggleLabel.TextColor3 = THEME.Text
            toggleLabel.TextSize = 14
            toggleLabel.Font = Enum.Font.Gotham
            toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            toggleLabel.Parent = toggleFrame
            
            local toggleButton = Instance.new("TextButton")
            toggleButton.Size = UDim2.new(0, 40, 0, 20)
            toggleButton.Position = UDim2.new(1, -50, 0.5, -10)
            toggleButton.BackgroundColor3 = config.CurrentValue and THEME.Accent or THEME.Border
            toggleButton.Text = ""
            toggleButton.BorderSizePixel = 0
            toggleButton.Parent = toggleFrame
            createCorner(toggleButton, 10)
            
            local toggleIndicator = Instance.new("Frame")
            toggleIndicator.Size = UDim2.new(0, 16, 0, 16)
            toggleIndicator.Position = config.CurrentValue and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            toggleIndicator.BackgroundColor3 = THEME.Text
            toggleIndicator.BorderSizePixel = 0
            toggleIndicator.Parent = toggleButton
            createCorner(toggleIndicator, 8)
            
            local currentValue = config.CurrentValue or false
            
            toggleButton.MouseButton1Click:Connect(function()
                currentValue = not currentValue
                
                local buttonColor = currentValue and THEME.Accent or THEME.Border
                local indicatorPos = currentValue and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
                
                createTween(toggleButton, {BackgroundColor3 = buttonColor}):Play()
                createTween(toggleIndicator, {Position = indicatorPos}):Play()
                
                if config.Callback then
                    config.Callback(currentValue)
                end
            end)
            
            return {
                Lock = function(self, reason)
                    toggleLabel.Text = reason or "Locked"
                    toggleFrame.BackgroundColor3 = THEME.Border
                    toggleLabel.TextColor3 = THEME.TextSecondary
                end,
                Unlock = function(self, reason)
                    toggleLabel.Text = config.Name
                    toggleFrame.BackgroundColor3 = THEME.Secondary
                    toggleLabel.TextColor3 = THEME.Text
                end
            }
        end
        
        -- Slider Creation
        function Tab:CreateSlider(config)
            local sliderFrame = Instance.new("Frame")
            sliderFrame.Name = config.Name
            sliderFrame.Size = UDim2.new(1, 0, 0, 60)
            sliderFrame.BackgroundColor3 = THEME.Secondary
            sliderFrame.BorderSizePixel = 0
            sliderFrame.Parent = config.SectionParent and config.SectionParent.Frame or tabContent
            createCorner(sliderFrame, 6)
            
            local sliderLabel = Instance.new("TextLabel")
            sliderLabel.Size = UDim2.new(1, -80, 0, 25)
            sliderLabel.Position = UDim2.new(0, 15, 0, 5)
            sliderLabel.BackgroundTransparency = 1
            sliderLabel.Text = config.Name
            sliderLabel.TextColor3 = THEME.Text
            sliderLabel.TextSize = 14
            sliderLabel.Font = Enum.Font.Gotham
            sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            sliderLabel.Parent = sliderFrame
            
            local valueLabel = Instance.new("TextLabel")
            valueLabel.Size = UDim2.new(0, 70, 0, 25)
            valueLabel.Position = UDim2.new(1, -75, 0, 5)
            valueLabel.BackgroundTransparency = 1
            valueLabel.Text = tostring(config.CurrentValue or config.Range[1]) .. (config.Suffix or "")
            valueLabel.TextColor3 = THEME.Accent
            valueLabel.TextSize = 14
            valueLabel.Font = Enum.Font.GothamBold
            valueLabel.TextXAlignment = Enum.TextXAlignment.Right
            valueLabel.Parent = sliderFrame
            
            local sliderTrack = Instance.new("Frame")
            sliderTrack.Size = UDim2.new(1, -30, 0, 4)
            sliderTrack.Position = UDim2.new(0, 15, 1, -20)
            sliderTrack.BackgroundColor3 = THEME.Border
            sliderTrack.BorderSizePixel = 0
            sliderTrack.Parent = sliderFrame
            createCorner(sliderTrack, 2)
            
            local sliderFill = Instance.new("Frame")
            sliderFill.Size = UDim2.new(0, 0, 1, 0)
            sliderFill.BackgroundColor3 = THEME.Accent
            sliderFill.BorderSizePixel = 0
            sliderFill.Parent = sliderTrack
            createCorner(sliderFill, 2)
            
            local sliderHandle = Instance.new("Frame")
            sliderHandle.Size = UDim2.new(0, 12, 0, 12)
            sliderHandle.Position = UDim2.new(0, -6, 0.5, -6)
            sliderHandle.BackgroundColor3 = THEME.Text
            sliderHandle.BorderSizePixel = 0
            sliderHandle.Parent = sliderFill
            createCorner(sliderHandle, 6)
            
            local currentValue = config.CurrentValue or config.Range[1]
            local minValue, maxValue = config.Range[1], config.Range[2]
            local increment = config.Increment or 1
            
            -- Update slider position
            local function updateSlider(value)
                local percentage = (value - minValue) / (maxValue - minValue)
                sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                valueLabel.Text = tostring(value) .. (config.Suffix or "")
                currentValue = value
            end
            
            updateSlider(currentValue)
            
            -- Slider interaction
            local dragging = false
            
            sliderTrack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mousePos = input.Position.X
                    local trackPos = sliderTrack.AbsolutePosition.X
                    local trackSize = sliderTrack.AbsoluteSize.X
                    
                    local percentage = math.clamp((mousePos - trackPos) / trackSize, 0, 1)
                    local value = minValue + (percentage * (maxValue - minValue))
                    value = math.floor(value / increment + 0.5) * increment
                    value = math.clamp(value, minValue, maxValue)
                    
                    updateSlider(value)
                    
                    if config.Callback then
                        config.Callback(value)
                    end
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            return {
                Lock = function(self, reason)
                    sliderLabel.Text = reason or "Locked"
                    sliderFrame.BackgroundColor3 = THEME.Border
                    sliderLabel.TextColor3 = THEME.TextSecondary
                end,
                Unlock = function(self, reason)
                    sliderLabel.Text = config.Name
                    sliderFrame.BackgroundColor3 = THEME.Secondary
                    sliderLabel.TextColor3 = THEME.Text
                end
            }
        end
        
        -- Input Creation
        function Tab:CreateInput(config)
            local inputFrame = Instance.new("Frame")
            inputFrame.Name = config.Name
            inputFrame.Size = UDim2.new(1, 0, 0, 60)
            inputFrame.BackgroundColor3 = THEME.Secondary
            inputFrame.BorderSizePixel = 0
            inputFrame.Parent = tabContent
            createCorner(inputFrame, 6)
            
            local inputLabel = Instance.new("TextLabel")
            inputLabel.Size = UDim2.new(1, 0, 0, 25)
            inputLabel.Position = UDim2.new(0, 15, 0, 5)
            inputLabel.BackgroundTransparency = 1
            inputLabel.Text = config.Name
            inputLabel.TextColor3 = THEME.Text
            inputLabel.TextSize = 14
            inputLabel.Font = Enum.Font.Gotham
            inputLabel.TextXAlignment = Enum.TextXAlignment.Left
            inputLabel.Parent = inputFrame
            
            local textBox = Instance.new("TextBox")
            textBox.Size = UDim2.new(1, -30, 0, 25)
            textBox.Position = UDim2.new(0, 15, 1, -30)
            textBox.BackgroundColor3 = THEME.Background
            textBox.Text = ""
            textBox.PlaceholderText = config.PlaceholderText or "Enter text..."
            textBox.TextColor3 = THEME.Text
            textBox.PlaceholderColor3 = THEME.TextSecondary
            textBox.TextSize = 14
            textBox.Font = Enum.Font.Gotham
            textBox.BorderSizePixel = 0
            textBox.Parent = inputFrame
            createCorner(textBox, 4)
            createStroke(textBox, THEME.Border)
            
            if config.NumbersOnly then
                textBox:GetPropertyChangedSignal("Text"):Connect(function()
                    textBox.Text = textBox.Text:gsub("%D", "")
                end)
            end
            
            if config.CharacterLimit then
                textBox:GetPropertyChangedSignal("Text"):Connect(function()
                    if #textBox.Text > config.CharacterLimit then
                        textBox.Text = textBox.Text:sub(1, config.CharacterLimit)
                    end
                end)
            end
            
            textBox.FocusLost:Connect(function(enterPressed)
                if config.OnEnter and not enterPressed then return end
                if config.RemoveTextAfterFocusLost then
                    textBox.Text = ""
                end
                if config.Callback then
                    config.Callback(textBox.Text)
                end
            end)
            
            return textBox
        end
        
        -- Dropdown Creation
        function Tab:CreateDropdown(config)
            local dropdownFrame = Instance.new("Frame")
            dropdownFrame.Name = config.Name
            dropdownFrame.Size = UDim2.new(1, 0, 0, 40)
            dropdownFrame.BackgroundColor3 = THEME.Secondary
            dropdownFrame.BorderSizePixel = 0
            dropdownFrame.Parent = tabContent
            createCorner(dropdownFrame, 6)
            
            local dropdownButton = Instance.new("TextButton")
            dropdownButton.Size = UDim2.new(1, 0, 1, 0)
            dropdownButton.BackgroundTransparency = 1
            dropdownButton.Text = config.Name .. ": " .. (config.CurrentOption or "Select...")
            dropdownButton.TextColor3 = THEME.Text
            dropdownButton.TextSize = 14
            dropdownButton.Font = Enum.Font.Gotham
            dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
            dropdownButton.Parent = dropdownFrame
            
            local dropdownArrow = Instance.new("TextLabel")
            dropdownArrow.Size = UDim2.new(0, 20, 1, 0)
            dropdownArrow.Position = UDim2.new(1, -25, 0, 0)
            dropdownArrow.BackgroundTransparency = 1
            dropdownArrow.Text = "â–¼"
            dropdownArrow.TextColor3 = THEME.TextSecondary
            dropdownArrow.TextSize = 12
            dropdownArrow.Font = Enum.Font.Gotham
            dropdownArrow.Parent = dropdownFrame
            
            local optionsFrame = Instance.new("Frame")
            optionsFrame.Name = "Options"
            optionsFrame.Size = UDim2.new(1, 0, 0, #config.Options * 30)
            optionsFrame.Position = UDim2.new(0, 0, 1, 5)
            optionsFrame.BackgroundColor3 = THEME.Secondary
            optionsFrame.BorderSizePixel = 0
            optionsFrame.Visible = false
            optionsFrame.ZIndex = 10
            optionsFrame.Parent = dropdownFrame
            createCorner(optionsFrame, 6)
            createStroke(optionsFrame, THEME.Border)
            
            local optionsList = Instance.new("UIListLayout")
            optionsList.SortOrder = Enum.SortOrder.LayoutOrder
            optionsList.Parent = optionsFrame
            
            local currentSelection = config.CurrentOption
            
            for i, option in ipairs(config.Options) do
                local optionButton = Instance.new("TextButton")
                optionButton.Size = UDim2.new(1, 0, 0, 30)
                optionButton.BackgroundColor3 = THEME.Secondary
                optionButton.Text = option
                optionButton.TextColor3 = THEME.Text
                optionButton.TextSize = 14
                optionButton.Font = Enum.Font.Gotham
                optionButton.BorderSizePixel = 0
                optionButton.Parent = optionsFrame
                
                optionButton.MouseEnter:Connect(function()
                    optionButton.BackgroundColor3 = THEME.Accent
                end)
                
                optionButton.MouseLeave:Connect(function()
                    optionButton.BackgroundColor3 = THEME.Secondary
                end)
                
                optionButton.MouseButton1Click:Connect(function()
                    currentSelection = option
                    dropdownButton.Text = config.Name .. ": " .. option
                    optionsFrame.Visible = false
                    dropdownArrow.Text = "â–¼"
                    
                    if config.Callback then
                        config.Callback(option)
                    end
                end)
            end
            
            dropdownButton.MouseButton1Click:Connect(function()
                optionsFrame.Visible = not optionsFrame.Visible
                dropdownArrow.Text = optionsFrame.Visible and "â–²" or "â–¼"
            end)
            
            return {
                Set = function(self, option)
                    if table.find(config.Options, option) then
                        currentSelection = option
                        dropdownButton.Text = config.Name .. ": " .. option
                    end
                end
            }
        end
        
        table.insert(Window.Tabs, Tab)
        return Tab
    end
    
    return Window
end

return KyanosUI
